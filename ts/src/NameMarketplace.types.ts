/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface AskCountResponse {
  count: number;
  [k: string]: unknown;
}
export type Uint128 = string;
export type Addr = string;
export interface AskCreatedHooksResponse {
  ask: Ask;
  [k: string]: unknown;
}
export interface Ask {
  height: number;
  id: number;
  renewal_fund: Uint128;
  seller: Addr;
  token_id: string;
  [k: string]: unknown;
}
export interface AskHooksResponse {
  hooks: string[];
  [k: string]: unknown;
}
export interface AskOffset {
  price: Uint128;
  token_id: string;
  [k: string]: unknown;
}
export interface AskResponse {
  ask?: Ask | null;
  [k: string]: unknown;
}
export interface AsksBySellerResponse {
  asks: Ask[];
  [k: string]: unknown;
}
export interface AsksResponse {
  asks: Ask[];
  [k: string]: unknown;
}
export interface AsksSortedByPriceResponse {
  asks: Ask[];
  [k: string]: unknown;
}
export interface BidHooksResponse {
  hooks: string[];
  [k: string]: unknown;
}
export interface BidOffset {
  bidder: Addr;
  price: Uint128;
  token_id: string;
  [k: string]: unknown;
}
export interface BidResponse {
  bid?: Bid | null;
  [k: string]: unknown;
}
export interface Bid {
  amount: Uint128;
  bidder: Addr;
  height: number;
  token_id: string;
  [k: string]: unknown;
}
export interface BidsByBidderResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface BidsByBidderSortedByExpirationResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface BidsResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface BidsSortedByPriceResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface CollectionBidsByBidderResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface CollectionBidsByBidderSortedByExpirationResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface CollectionBidsSortedByPriceResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export type ExecuteMsg = {
  set_ask: {
    seller: string;
    token_id: string;
    [k: string]: unknown;
  };
} | {
  set_bid: {
    token_id: string;
    [k: string]: unknown;
  };
} | {
  remove_bid: {
    token_id: string;
    [k: string]: unknown;
  };
} | {
  accept_bid: {
    bidder: string;
    token_id: string;
    [k: string]: unknown;
  };
} | {
  process_renewals: {
    height: number;
    [k: string]: unknown;
  };
} | {
  fund_renewal: {
    token_id: string;
    [k: string]: unknown;
  };
} | {
  refund_renewal: {
    token_id: string;
    [k: string]: unknown;
  };
};
export interface InstantiateMsg {
  min_price: Uint128;
  trading_fee_bps: number;
  [k: string]: unknown;
}
export type MarketplaceContract = Addr;
export type Decimal = string;
export interface ParamsResponse {
  params: SudoParams;
  [k: string]: unknown;
}
export interface SudoParams {
  min_price: Uint128;
  trading_fee_percent: Decimal;
  [k: string]: unknown;
}
export type QueryMsg = {
  ask: {
    token_id: string;
    [k: string]: unknown;
  };
} | {
  asks: {
    limit?: number | null;
    start_after?: number | null;
    [k: string]: unknown;
  };
} | {
  reverse_asks: {
    limit?: number | null;
    start_before?: number | null;
    [k: string]: unknown;
  };
} | {
  ask_count: {
    [k: string]: unknown;
  };
} | {
  asks_by_seller: {
    limit?: number | null;
    seller: string;
    start_after?: string | null;
    [k: string]: unknown;
  };
} | {
  bid: {
    bidder: string;
    token_id: string;
    [k: string]: unknown;
  };
} | {
  bids_by_bidder: {
    bidder: string;
    limit?: number | null;
    start_after?: string | null;
    [k: string]: unknown;
  };
} | {
  bids: {
    limit?: number | null;
    start_after?: string | null;
    token_id: string;
    [k: string]: unknown;
  };
} | {
  bids_sorted_by_price: {
    limit?: number | null;
    start_after?: BidOffset | null;
    [k: string]: unknown;
  };
} | {
  reverse_bids_sorted_by_price: {
    limit?: number | null;
    start_before?: BidOffset | null;
    [k: string]: unknown;
  };
} | {
  ask_hooks: {
    [k: string]: unknown;
  };
} | {
  bid_hooks: {
    [k: string]: unknown;
  };
} | {
  sale_hooks: {
    [k: string]: unknown;
  };
} | {
  params: {
    [k: string]: unknown;
  };
} | {
  renewal_queue: {
    height: number;
    [k: string]: unknown;
  };
};
export interface ReverseAsksSortedByPriceResponse {
  asks: Ask[];
  [k: string]: unknown;
}
export interface ReverseBidsSortedByPriceResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface ReverseCollectionBidsSortedByPriceResponse {
  bids: Bid[];
  [k: string]: unknown;
}
export interface SaleHooksResponse {
  buyer: string;
  seller: string;
  token_id: string;
  [k: string]: unknown;
}
export type SudoMsg = {
  update_params: {
    min_price?: Uint128 | null;
    trading_fee_bps?: number | null;
    [k: string]: unknown;
  };
} | {
  update_name_minter: {
    minter: string;
    [k: string]: unknown;
  };
} | {
  update_name_collection: {
    collection: string;
    [k: string]: unknown;
  };
} | {
  add_ask_hook: {
    hook: string;
    [k: string]: unknown;
  };
} | {
  remove_ask_hook: {
    hook: string;
    [k: string]: unknown;
  };
} | {
  add_bid_hook: {
    hook: string;
    [k: string]: unknown;
  };
} | {
  remove_bid_hook: {
    hook: string;
    [k: string]: unknown;
  };
} | {
  add_sale_hook: {
    hook: string;
    [k: string]: unknown;
  };
} | {
  remove_sale_hook: {
    hook: string;
    [k: string]: unknown;
  };
};