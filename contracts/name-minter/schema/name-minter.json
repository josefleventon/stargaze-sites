{
  "contract_name": "name-minter",
  "contract_version": "0.7.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "base_price",
      "collection_code_id",
      "marketplace_addr",
      "max_name_length",
      "min_name_length"
    ],
    "properties": {
      "admin": {
        "description": "Temporary admin for managing whitelists",
        "type": [
          "string",
          "null"
        ]
      },
      "base_price": {
        "$ref": "#/definitions/Uint128"
      },
      "collection_code_id": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "marketplace_addr": {
        "type": "string"
      },
      "max_name_length": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "min_name_length": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "additionalProperties": false,
    "definitions": {
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Change the admin that manages the whitelist Will be set to null after go-to-market",
        "type": "object",
        "required": [
          "update_admin"
        ],
        "properties": {
          "update_admin": {
            "type": "object",
            "properties": {
              "admin": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Change to another whitelist or set to null",
        "type": "object",
        "required": [
          "update_whitelist"
        ],
        "properties": {
          "update_whitelist": {
            "type": "object",
            "properties": {
              "whitelist": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Mint a name for the sender or contract addresss If `contract` is given, name is minted for that contract address",
        "type": "object",
        "required": [
          "mint_and_list"
        ],
        "properties": {
          "mint_and_list": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "contract": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "admin"
        ],
        "properties": {
          "admin": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "whitelist"
        ],
        "properties": {
          "whitelist": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "collection"
        ],
        "properties": {
          "collection": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "params"
        ],
        "properties": {
          "params": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "admin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AdminResponse",
      "description": "Returned from Admin.query_admin()",
      "type": "object",
      "properties": {
        "admin": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "collection": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CollectionResponse",
      "type": "object",
      "required": [
        "collection"
      ],
      "properties": {
        "collection": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "params": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ParamsResponse",
      "type": "object",
      "required": [
        "base_price",
        "max_name_length",
        "min_name_length"
      ],
      "properties": {
        "base_price": {
          "$ref": "#/definitions/Uint128"
        },
        "max_name_length": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "min_name_length": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "whitelist": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WhitelistResponse",
      "type": "object",
      "properties": {
        "whitelist": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
